name: Update Weather

on:
  schedule:
    - cron: "0 8 * * *"
  workflow_dispatch:

jobs:
  update-weather:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install requests
          sudo apt-get update && sudo apt-get install -y jq  # Ensure jq is available

      - name: Fetch weather data
        id: weather
        env:
          API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
        run: |
          CITY="Sydney"
          LAT="-33.8688"
          LON="151.2093"
          WEATHER_URL="http://api.openweathermap.org/data/2.5/forecast?lat=${LAT}&lon=${LON}&appid=${API_KEY}&units=metric"

          # Fetch weather data
          response=$(curl -s "$WEATHER_URL")
          if [[ $(echo "$response" | jq -r '.cod') -ne 200 ]]; then
            echo "Failed to fetch weather data"
            exit 1
          fi

          # Convert UTC timestamps to Sydney time
          forecast=$(echo "$response" | jq -r '
            .list[:6] | 
            map(
              (.dt | strftime("%Y-%m-%d %H:%M:%S UTC") + " -> " + 
              (.dt | tonumber + 39600 | strftime("%Y-%m-%d %H:%M:%S %Z")) + ": " +
              (.main.temp|tostring) + "Â°C, " + .weather[0].description)
            ) | join("\n")
          ')

          # Debug output
          echo "Fetched Forecast (Converted to Sydney Time):"
          echo "$forecast"

          # Store in file
          echo "$forecast" > weather.txt

      - name: Update README
        run: |
          # Read weather data from file
          weather_info=$(cat weather.txt)

          # Create the new weather block
          echo -e "<!-- WEATHER:START -->\n\`\`\`\n$weather_info\n\`\`\`\n<!-- WEATHER:END -->" > temp_weather.md

          # Replace the weather block in README.md
          awk '
          BEGIN { inside=0 }
          /<!-- WEATHER:START -->/ { print; system("cat temp_weather.md"); inside=1; next }
          /<!-- WEATHER:END -->/ { inside=0 }
          !inside { print }
          ' README.md > updated_readme.md

          mv updated_readme.md README.md

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          if git diff --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git add README.md
          git commit -m "Update weather information"
          git push
