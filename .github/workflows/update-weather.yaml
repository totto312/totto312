name: Update Weather

on:
  schedule:
    - cron: "0 8 * * *"
  workflow_dispatch:

jobs:
  update-weather:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install requests
          sudo apt-get update && sudo apt-get install -y jq  # Ensure jq is available

      - name: Fetch weather data
        id: weather
        env:
          API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
        run: |
          CITY="Sydney"
          LAT="-33.8688"
          LON="151.2093"
          WEATHER_URL="http://api.openweathermap.org/data/2.5/forecast?lat=${LAT}&lon=${LON}&appid=${API_KEY}&units=metric"

          # Fetch weather data
          response=$(curl -s "$WEATHER_URL")
          if [[ $(echo "$response" | jq -r '.cod') -ne 200 ]]; then
            echo "Failed to fetch weather data"
            exit 1
          fi

          # Extract the next 6 forecasted times (3-hour intervals)
          forecast=$(echo "$response" | jq -r '[.list[:6] | map("\(.dt_txt): \(.main.temp)Â°C, \(.weather[0].description)") | join("\n")] | .[0]')

          # Store in GitHub environment using <<EOF syntax for multiline values
          {
            echo "weather_info<<EOF"
            echo "$forecast"
            echo "EOF"
          } >> "$GITHUB_ENV"

      - name: Update README
        run: |
          weather_info="${{ env.weather_info }}"
          weather_block=$(printf "<!-- WEATHER:START -->\n\`\`\`\n%s\n\`\`\`\n<!-- WEATHER:END -->" "$weather_info")
          echo "$weather_block" > temp_readme.md
          awk 'NR==FNR{a[n++]=$0; next} /<!-- WEATHER:START -->/{print a[0]; next} /<!-- WEATHER:END -->/{print a[1]; next} 1' temp_readme.md README.md > updated_readme.md
          mv updated_readme.md README.md

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          if git diff --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git add README.md
          git commit -m "Update weather information"
          git push
